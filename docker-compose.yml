# currency-converter/docker-compose.yml
version: '3.8'

services:
  # Serviço da API Go
  api:
    container_name: currency_api
    # Constrói a imagem a partir do Dockerfile na pasta atual (.)
    build: .
    ports:
      # Mapeia a porta 8080 do host para a 8080 do container
      - "8080:8080"
    # Carrega as variáveis de ambiente do arquivo .env
    env_file:
      - .env
    # Garante que o container 'db' seja iniciado ANTES do container 'api'
    depends_on:
      - db

  # Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: currency_db
    restart: always
    # As variáveis de ambiente para o banco continuam aqui
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    # NÃO precisamos mais expor a porta do banco para o host,
    # pois a comunicação será interna entre os containers.
    # Mas podemos manter para debug com ferramentas externas.
    ports:
      - "5434:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      # Adicionando um volume nomeado para persistir os dados do banco
      - postgres_data:/var/lib/postgresql/data

# Define o volume nomeado para persistência dos dados
volumes:
  postgres_data: